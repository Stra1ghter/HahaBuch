<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PersonalData" xml:space="preserve">
    <value>Personal data</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Reload" xml:space="preserve">
    <value>Reload</value>
  </data>
  <data name="TransactionAdd" xml:space="preserve">
    <value>Add transaction</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="UserOverview" xml:space="preserve">
    <value>User overview</value>
  </data>
  <data name="InvalidLoginAttempt" xml:space="preserve">
    <value>Login attempt unsuccessful</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="UpdatedHint" xml:space="preserve">
    <value>Updated data</value>
  </data>
  <data name="Vault" xml:space="preserve">
    <value>Vault</value>
  </data>
  <data name="Income" xml:space="preserve">
    <value>Income</value>
  </data>
  <data name="Expense" xml:space="preserve">
    <value>Expense</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="InvalidPassword" xml:space="preserve">
    <value>Invalid password</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="CategoriesDescription" xml:space="preserve">
    <value>Before tracking your expenses, it's a good idea to thoroughly review your categories. Every expense should be assigned to one category. It's important to have a clear distinction between each category. Think about your yearly expenses, like grocery shopping, entertainment, and travel. Can you clearly assign (or split) all expenses to one fitting category?</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="CategoriesNotFound" xml:space="preserve">
    <value>No categories found.</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="CategorySelectLabel" xml:space="preserve">
    <value>Select a category</value>
  </data>
  <data name="DateTime" xml:space="preserve">
    <value>Date and Time</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="CreateNew" xml:space="preserve">
    <value>Create new</value>
  </data>
  <data name="OptionalLabelSuffix" xml:space="preserve">
    <value>(optional)</value>
  </data>
  <data name="InvalidMoneyFormat" xml:space="preserve">
    <value>Input must be a money value.</value>
  </data>
  <data name="InvalidMoneyFormatNumDecimalPlaces" xml:space="preserve">
    <value>Money input can only contain two decimal places.</value>
  </data>
  <data name="InvalidMoneyFormatZero" xml:space="preserve">
    <value>Money must be a non-zero value.</value>
  </data>
  <data name="TransactionAddException" xml:space="preserve">
    <value>There was an exception adding this transaction.</value>
  </data>
  <data name="TransactionAddSuccess" xml:space="preserve">
    <value>Transaction added successfully.</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LanguageChange" xml:space="preserve">
    <value>In order to switch to another language, simply adjust your preferred browser language.  Make sure to use a complete Region, e.g. "German (Germany)" and not only "German". Date formats are determined by your local system setting.</value>
  </data>
  <data name="TransactionOverview" xml:space="preserve">
    <value>Overview</value>
  </data>
  <data name="TransactionsNotFound" xml:space="preserve">
    <value>No transactions found.</value>
  </data>
  <data name="TransactionEdit" xml:space="preserve">
    <value>Edit transaction</value>
  </data>
  <data name="TransactionEditSuccess" xml:space="preserve">
    <value>Transaction edited successfully.</value>
  </data>
  <data name="TransactionDelete" xml:space="preserve">
    <value>Delete transaction</value>
  </data>
  <data name="TransactionDeleteWarning" xml:space="preserve">
    <value>Are you sure you want to delete this transaction?</value>
  </data>
  <data name="InvalidColor" xml:space="preserve">
    <value>Invalid color.</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="CategoryReferencedException" xml:space="preserve">
    <value>Could not delete category, it used by transactions.</value>
  </data>
  <data name="Abbreviation" xml:space="preserve">
    <value>Abbreviation</value>
  </data>
  <data name="ImprintLink" xml:space="preserve">
    <value>Imprint, privacy</value>
  </data>
  <data name="ImprintHeading" xml:space="preserve">
    <value>Imprint</value>
  </data>
  <data name="ImprintContent" xml:space="preserve">
    <value>This website is created purely for private means. In accordance with German law (§ 5 DDG and § 18 MStV) no imprint is required.</value>
  </data>
  <data name="ImprintGDPRHeading" xml:space="preserve">
    <value>Privacy policy</value>
  </data>
  <data name="ImprintGDPRContent" xml:space="preserve">
    <value>1. Data Controller
Simon Gensler

2. General Information on Data Processing
We take the protection of your personal data very seriously. This privacy policy informs you about what data we collect when you use our finance tracker website and how we use it.

3. Data Collected
3.1 Account Data

Email address (for registration and login)
Password (stored encrypted)

3.2 Financial Data

Income and expenses
Transaction categorizations

3.3 Technical Data

IP address
Browser type and version
Operating system
Access times

4. Purpose of Data Processing
We process your data exclusively for:

Providing and improving our services
Managing your user account
Storing your financial data for tracking purposes
Ensuring system security

5. Legal Basis
Processing is based on:

Art. 6 para. 1 lit. b GDPR (contract performance)
Art. 6 para. 1 lit. f GDPR (legitimate interests)
Art. 6 para. 1 lit. a GDPR (consent)

6. Data Security
Your financial data is transmitted and stored in encrypted form (SSL/TLS). We implement technical and organizational measures to protect your data from unauthorized access, loss, or misuse.
Important: We do not have access to your actual bank accounts. Connection to bank accounts occurs exclusively locally on your device or through certified third-party providers.

7. Disclosure of Data
We do not share your data with third parties.

8. Storage Duration
Your data is stored as long as your account is active. After deleting your account, all personal data will be completely deleted within 30 days, unless there are legal retention obligations.

9. Your Rights
You have the right to:

Access your stored data (Art. 15 GDPR)
Rectification of incorrect data (Art. 16 GDPR)
Erasure of your data (Art. 17 GDPR)
Restriction of processing (Art. 18 GDPR)
Data portability (Art. 20 GDPR)
Object to processing (Art. 21 GDPR)

10. Cookies
Our website uses necessary cookies to provide functionality. These are required for the operation of the website and cannot be disabled. We do not use tracking or marketing cookies.

11. Right to Complain
You have the right to lodge a complaint with a data protection supervisory authority regarding the processing of your data.

12. Changes
We reserve the right to update this privacy policy to adapt it to changes in the legal situation or changes to our services. The current version can always be found on this page.</value>
  </data>
  <data name="InvalidMoneyFormatNegative" xml:space="preserve">
    <value>Money input cannot be negative.</value>
  </data>
</root>